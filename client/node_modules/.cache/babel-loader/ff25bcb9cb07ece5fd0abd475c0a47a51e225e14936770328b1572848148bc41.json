{"ast":null,"code":"var _jsxFileName = \"/home/tinesh/Desktop/Recipie App/client/src/pages/CreateRecipe.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\n\n//I just installed it to the use of dynamically create a input boxes for adding incredients at the form\n// import {v4 as uuid} from 'uuid'\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateRecipe = () => {\n  _s();\n  const [name, setName] = useState(\"\");\n  const [ingredients, setIngredients] = useState([]);\n  const [ingredientsId, setIngredientsId] = useState([]);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"name\",\n      children: \"Enter Ingredient Name : \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      id: \"name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"ingredient\",\n      id: \"ingredients\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 7\n  }, this);\n};\n_s(CreateRecipe, \"iKtI7l+hP9Hos27LM1CwgjT7CmI=\");\n_c = CreateRecipe;\nexport default CreateRecipe;\nvar _c;\n$RefreshReg$(_c, \"CreateRecipe\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CreateRecipe","_s","name","setName","ingredients","setIngredients","ingredientsId","setIngredientsId","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","_c","$RefreshReg$"],"sources":["/home/tinesh/Desktop/Recipie App/client/src/pages/CreateRecipe.jsx"],"sourcesContent":["import React from 'react'\nimport {useState} from 'react'\n\n//I just installed it to the use of dynamically create a input boxes for adding incredients at the form\n// import {v4 as uuid} from 'uuid'\n\nconst CreateRecipe = () => {\n  const [name, setName] = useState(\"\")\n  const [ingredients, setIngredients] = useState([])\n  const [ingredientsId, setIngredientsId] = useState([])\n\n  return (\n      <form>\n        <label htmlFor=\"name\">Enter Ingredient Name : </label>\n        <input type=\"text\" name=\"name\" id=\"name\" />\n        <input type=\"text\" name=\"ingredient\" id=\"ingredients\" />\n      </form>\n  )\n}\n\nexport default CreateRecipe"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,QAAQ,QAAO,OAAO;;AAE9B;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACO,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACS,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEtD,oBACIE,OAAA;IAAAS,QAAA,gBACET,OAAA;MAAOU,OAAO,EAAC,MAAM;MAAAD,QAAA,EAAC;IAAwB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACtDd,OAAA;MAAOe,IAAI,EAAC,MAAM;MAACZ,IAAI,EAAC,MAAM;MAACa,EAAE,EAAC;IAAM;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC3Cd,OAAA;MAAOe,IAAI,EAAC,MAAM;MAACZ,IAAI,EAAC,YAAY;MAACa,EAAE,EAAC;IAAa;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpD,CAAC;AAEb,CAAC;AAAAZ,EAAA,CAZKD,YAAY;AAAAgB,EAAA,GAAZhB,YAAY;AAclB,eAAeA,YAAY;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}